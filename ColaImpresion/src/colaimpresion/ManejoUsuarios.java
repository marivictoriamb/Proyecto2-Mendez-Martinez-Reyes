package colaimpresion;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */



import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
* Descripcion: Interfaz de Manejo Usuarios
* @autor: Maria Martinez
* @version: 20/11/23
*/
public class ManejoUsuarios extends javax.swing.JFrame {
    private Usuarios usuarios;
    private TablaDeDispersion tabla = new TablaDeDispersion();
    private MonticuloBinario monticulo = new MonticuloBinario();
    private Cronometro tiempo = new Cronometro();
    DefaultTableModel modelo = new DefaultTableModel();
    
    /**
     * Descripcion: Constructor de la interfaz ManejoUsuarios
     * @autor: Maria Martinez
     * @version: 20/11/23
     */
    public ManejoUsuarios() {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        usuarios = new Usuarios();
        String info [] = {"Nombre","Prioridad","Cantidad de Documentos"}; 
        modelo.setColumnIdentifiers(info);
        tablaUsuarios.setModel(modelo);

    }
          
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        Titulo1 = new javax.swing.JLabel();
        EliminarUsuario = new javax.swing.JButton();
        boxUsuarios = new javax.swing.JComboBox<>();
        TextNombre = new javax.swing.JTextField();
        AgregarUsuario = new javax.swing.JButton();
        MostrarUsuarios = new javax.swing.JButton();
        Return = new javax.swing.JButton();
        boxPrioridad = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaUsuarios = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        jButton2.setBackground(new java.awt.Color(204, 204, 204));
        jButton2.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 0, 51));
        jButton2.setText("<--");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Titulo1.setFont(new java.awt.Font("Shree Devanagari 714", 0, 36)); // NOI18N
        Titulo1.setForeground(new java.awt.Color(255, 255, 255));
        Titulo1.setText("Usuarios");
        getContentPane().add(Titulo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, 172, -1));

        EliminarUsuario.setFont(new java.awt.Font("Shree Devanagari 714", 0, 14)); // NOI18N
        EliminarUsuario.setText("Eliminar");
        EliminarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarUsuarioActionPerformed(evt);
            }
        });
        getContentPane().add(EliminarUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 420, -1, -1));

        boxUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxUsuariosActionPerformed(evt);
            }
        });
        getContentPane().add(boxUsuarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 380, 170, -1));

        TextNombre.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        TextNombre.setText("Agrege el nombre de usuario (@ejemplo)");
        TextNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextNombreActionPerformed(evt);
            }
        });
        getContentPane().add(TextNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, -1, -1));

        AgregarUsuario.setFont(new java.awt.Font("Shree Devanagari 714", 0, 14)); // NOI18N
        AgregarUsuario.setText("Agregar");
        AgregarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarUsuarioActionPerformed(evt);
            }
        });
        getContentPane().add(AgregarUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 240, -1, -1));

        MostrarUsuarios.setBackground(new java.awt.Color(204, 204, 255));
        MostrarUsuarios.setFont(new java.awt.Font("Shree Devanagari 714", 0, 14)); // NOI18N
        MostrarUsuarios.setText("Mostrar Usuarios");
        MostrarUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarUsuariosActionPerformed(evt);
            }
        });
        getContentPane().add(MostrarUsuarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 30, -1, -1));

        Return.setBackground(new java.awt.Color(204, 255, 255));
        Return.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        Return.setForeground(new java.awt.Color(0, 0, 51));
        Return.setText("<-");
        Return.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnActionPerformed(evt);
            }
        });
        getContentPane().add(Return, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, 50, -1));

        boxPrioridad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxPrioridadActionPerformed(evt);
            }
        });
        getContentPane().add(boxPrioridad, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, 195, -1));

        tablaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tablaUsuarios);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 80, 350, 320));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/imagen7.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 700, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void boxUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxUsuariosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boxUsuariosActionPerformed

    private void TextNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextNombreActionPerformed

     /**
     * Descripcion: Llena un combobox con las opciones de prioridad de un usuario
     * @autor: Maria Martinez
     * @version: 20/11/23
     */
    public void LlenarboxPrioridadActionPerformed(java.awt.event.ActionEvent evt) {                                          
       
        boxPrioridad.removeAllItems();
        String [] prioridad = new String [3];
        prioridad[0] = "prioridad_alta";
        prioridad[1] = "prioridad_media";
        prioridad[2] = "prioridad_baja";
        
            for (int i = 0; i < prioridad.length; i++) {
                boxPrioridad.addItem(prioridad[i]);
            }
    }   
    
    /**
     * Descripcion: Llena un combobox con los usuarios registrados
     * @autor: Maria Martinez
     * @version: 20/11/23
     */
     public void LlenarboxActionPerformed(java.awt.event.ActionEvent evt) {                                          
        boxUsuarios.removeAllItems();
         if (usuarios.getNombres().length != 0){
            NodoUsuario [] users = usuarios.getNombres();

                for (int i = 0; i < users.length; i++) {
                    if (!users[i].isDead()){
                        boxUsuarios.addItem(users[i].getNombreUsuario().replaceAll("\\p{C}", ""));
                    }
                }
        }
        
    }   
     
     /**
     * Descripcion: Agrega un usuario dado el nombre de usuario y la prioridad
     * @autor: Maria Martinez
     * @version: 20/11/23
     */
    private void AgregarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarUsuarioActionPerformed
        String nombre = TextNombre.getText();
        TextNombre.setText("Agregue el nombre de usuario (ejemplo_nombre)");
        
        if (usuarios.getSize() < 23){
            if (boxPrioridad.getSelectedItem() ==  null){
                JOptionPane.showMessageDialog(null, "\nError!\nSeleccione la prioridad");
            } else {
                String prioridad = boxPrioridad.getSelectedItem().toString().replaceAll("\\p{C}", "");

                if (nombre.contains(" ") || nombre.isEmpty()==true || nombre.length()<2 || nombre.contains("\\p{C}")){
                    JOptionPane.showMessageDialog(null, "\nError!\nIndique un nombre con el formato correcto (mas de 2 caracteres)!");
                } else if (nombre.length() > 15){
                    JOptionPane.showMessageDialog(null, "\nError!\nEl nombre de usuario debe tener menos de 15 caracteres");
                } else if (usuarios.Buscar(nombre)!= null){
                    JOptionPane.showMessageDialog(null, "\nError!\nUsuario Existente!");
                } else {
                    usuarios.AgregarUsuario(nombre, prioridad);
                    JOptionPane.showMessageDialog(null, "\nUsuario Agregado Exitosamente!");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "\nNo se pueden agregar mas usuarios por los momentos!");
        }
        LlenarboxPrioridadActionPerformed(evt);
        LlenarboxActionPerformed(evt);
        LlenarUsuariosActionPerformed(evt);
    }//GEN-LAST:event_AgregarUsuarioActionPerformed
    
    /**
     * Descripcion: Llena la tabla con los usuarios registrados y su informacion
     * @autor: Mauricio Mendez
     * @version: 20/11/23
     */
    public void LlenarUsuariosActionPerformed(java.awt.event.ActionEvent evt){
        
        int fila = tablaUsuarios.getRowCount();
        
        for (int i = fila-1; i >=0; i--) {
            modelo.removeRow(i);
        }
        
        
        if (usuarios.getNombres().length != 0){
            
            
            NodoUsuario [] users = usuarios.getNombres();
            for (int i = 0; i < users.length; i++) {
                    if (!users[i].isDead()){
                        String nombreUsuario= users[i].getNombreUsuario().replaceAll("\\p{C}", "");
                        String prioridadUsuaurio = users[i].getTipo().replaceAll("\\p{C}", "");
                        Documento[] documentos = usuarios.BuscarDocumentosUsuario(nombreUsuario);
                        int cantidadDocumentos = documentos.length;
                        modelo.addRow(new Object[]{nombreUsuario,prioridadUsuaurio,cantidadDocumentos});
                    }
                    
                }
      }else{
          JOptionPane.showMessageDialog(null, "Error! \n Cargue los usuarios");
      }
    }
    
    /**
     * Descripcion: Boton para llenar la tabla con usuarios
     * @autor: Maria Martinez
     * @version: 20/11/23
     */
    private void MostrarUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarUsuariosActionPerformed
        
        LlenarUsuariosActionPerformed(evt);
        

    }//GEN-LAST:event_MostrarUsuariosActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        /**
        * Descripcion: El main de la interfaz principal
        */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Main main = new Main();
                main.setUsuarios(usuarios);
                main.setTabla(tabla);
                main.setMonticulo(monticulo);
                main.setVisible(true);
            }
        });

        // Ocultar esta interfaz
        this.setVisible(false);

    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * Descripcion: Llama y muestra la interfaz Main
     * @autor: Maria Martinez
     * @version: 20/11/23
     */
    private void ReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnActionPerformed
        /**
        * Descripcion: El main de la interfaz principal
        */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Main main = new Main();
                main.setTabla(tabla);
                main.setMonticulo(monticulo);
                main.setUsuarios(usuarios);
                main.setTiempo(tiempo);
                
                main.setVisible(true);
            }
        });

        // Ocultar esta interfaz
        this.setVisible(false);

    }//GEN-LAST:event_ReturnActionPerformed

    
    /**
     * Descripcion: Elimina un usuario escogido en un combobox
     * @autor: Maria Martinez
     * @version: 20/11/23
     */
    private void EliminarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarUsuarioActionPerformed
        if (boxUsuarios.getSelectedItem()!=  null){
            String usuario= boxUsuarios.getSelectedItem().toString().replaceAll("\\p{C}", "");
            usuarios.EliminarUsuario(usuario);
            
            LlenarboxActionPerformed(evt);
            LlenarUsuariosActionPerformed(evt);
//            modelo.removeAllElements();
      }else{
          JOptionPane.showMessageDialog(null, "Error! \n Cargue los usuarios");
      }
      LlenarUsuariosActionPerformed(evt);
        
    }//GEN-LAST:event_EliminarUsuarioActionPerformed

    private void boxPrioridadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxPrioridadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boxPrioridadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManejoUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManejoUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManejoUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManejoUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManejoUsuarios().setVisible(true);
            }
        });
    }

    public DefaultTableModel getModelo() {
        return modelo;
    }

    public void setModelo(DefaultTableModel modelo) {
        this.modelo = modelo;
    }
    
    
    public Usuarios getUsuarios() {
        return usuarios;
    }

    public void setUsuarios(Usuarios usuarios) {
        this.usuarios = usuarios;
    }
    
    public TablaDeDispersion getTabla() {
        return tabla;
    }

    public void setTabla(TablaDeDispersion tabla) {
        this.tabla = tabla;
    }
    
    public MonticuloBinario getMonticulo() {
        return monticulo;
    }

    public void setMonticulo(MonticuloBinario monticulo) {
        this.monticulo = monticulo;
    }

    public Cronometro getTiempo() {
        return tiempo;
    }

    public void setTiempo(Cronometro tiempo) {
        this.tiempo = tiempo;
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AgregarUsuario;
    private javax.swing.JButton EliminarUsuario;
    private javax.swing.JButton MostrarUsuarios;
    private javax.swing.JButton Return;
    private javax.swing.JTextField TextNombre;
    private javax.swing.JLabel Titulo1;
    private javax.swing.JComboBox<String> boxPrioridad;
    private javax.swing.JComboBox<String> boxUsuarios;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablaUsuarios;
    // End of variables declaration//GEN-END:variables
}
